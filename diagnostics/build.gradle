apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def mVersionCode = 3
def mVersionName = "0.1.1"
group = "org.honorato.diagnostics"
version = mVersionName

def siteUrl = 'https://github.com/jlhonora/android-diagnostics'
def gitUrl = 'https://github.com/jlhonora/android-diagnostics.git'
def gitSSHUrl = 'git@github.com:jlhonora/android-diagnostics.git'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 23
        versionCode mVersionCode
        versionName mVersionName
    }

    buildTypes {
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs  = ['res']
        }
    }

    dataBinding {
        enabled true
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "diagnostics"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        issueTrackerUrl = siteUrl + '/issues'
        licenses = ["MIT"]
        publish = true
        publicDownloadNumbers = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'

                name 'Android diagnostics activity'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'MIT License'
                        url 'http://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id 'jlhonora'
                        name 'Jose Luis Honorato'
                        email 'jlhonora@ing.puc.cl'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.facebook.network.connectionclass:connectionclass:1.0.1'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}
